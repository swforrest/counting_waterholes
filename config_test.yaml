# Validation run with Best weights from TrainFinalandOld

yolo_dir: C:\Users\adria\OneDrive - Queensland University of Technology\FirstByte Waterholes WD\yolov5
python: python
# Configuration for Validation/Analysis Runs
path: C:\Users\adria\OneDrive - Queensland University of Technology\FirstByte Waterholes WD\counting_waterholes
weights: ./data/NN_weights.pt
# weights: /Users/charlieturner/Desktop/Yolov5l.pt
device: cuda:0

# raw_images: C:\ML_Software\active_learning\data\downloads # Folders as downloaded from Planet (extracted zips)

# Auxiliary Paths (relative to run folder, or absolute if using existing)
# These paths either exist (and are used) or are created (and used) by the run
pngs: . # Pngs for the tif files
segmented_images: . # Segmented images
labels: . # Labels for the images
classifications: . # Classifications for the images

img_size: 416
img_stride: 104

tasks:
  # These 4 are not required if have been done before (and above paths are absolute and exist)
  prepare: False # Prepare for labelling
  segment: False # Segment images/labels
  run_detection: True # Run the classifier
  backwards_annotation: False # Generate annotations from the classifier output

  analyse:
    # Main analysis step: cluster and compare outputs a comparison csv
    compare_detections_to_ground_truth: True # Cluster and compare results to ground truth (have to do this for all analysis below)

    # Supplementary analysis
    plots:
      confusion_matrix: True # Confusion matrix
      boat_count_compare: True # Compare boat counts in each image detections to ground truth and output a graph
    images:
      all_mistakes: False # Collate all mistakes into images with comparison
      subimage_confidence: False # Show confidence of detection for all subimages of a given boat (number of random boats to do this for)
      coverage_heatmap: False # generate a tif file with a heatmap of coverage of images in the test data
